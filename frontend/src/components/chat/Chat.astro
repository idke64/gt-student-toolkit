---
import Sidebar from './Sidebar.astro';
import Message from './Message.astro';
import Response from './Response.astro';
import ChatInput from './ChatInput.astro';

const { slug, isNewChat } = Astro.props;

const topicData = {
  'gt-barcelona': {
    title: "GT Barcelona Program",
    info: {
      points: [
        "8-week summer program",
        "6 credit hours",
        "Cultural excursions"
      ]
    }
  },
  'default': {
    title: "General Chat",
    info: {
      points: [
        "Ask me anything about Georgia Tech",
        "I can help with academic questions",
        "Available 24/7 to assist you"
      ]
    }
  }
};

const currentTopic = slug && topicData[slug] ? topicData[slug] : topicData.default;
---

<div class="flex h-screen bg-gray-50">
  <Sidebar activeSlug={slug} />
  
  <div class="flex-1 flex flex-col">
    <header class="p-4 border-b border-gray-200 bg-white">
      <h1 class="text-xl font-bold">
        {isNewChat ? 'New Chat' : currentTopic.title}
      </h1>
    </header>

    <div class="flex-1 overflow-y-auto p-4" id="chat-container">
      {isNewChat ? (
        <div class="text-center py-8 text-gray-500">
          Start a new conversation
        </div>
      ) : (
        <Response title="Information">
          <ul class="list-disc pl-5 space-y-1">
            {currentTopic.info.points.map(point => (
              <li>{point}</li>
            ))}
          </ul>
        </Response>
      )}
    </div>

    <ChatInput isNewChat={isNewChat} />
  </div>
</div>

<script is:inline>
document.addEventListener('DOMContentLoaded', () => {
  const chatContainer = document.getElementById('chat-container');
  const inputForm = document.querySelector('form');
  
  inputForm?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const input = e.target.querySelector('input');
    const message = input.value.trim();
    
    if (!message) return;
    
    // Clear "start new conversation" message if present
    if (document.querySelector('.text-center.py-8')) {
      chatContainer.innerHTML = '';
    }
    
    // Add user message
    const userMsg = document.createElement('div');
    userMsg.className = 'flex justify-end mb-4';
    userMsg.innerHTML = `
      <div class="bg-blue-500 text-white p-3 rounded-lg max-w-[75%]">
        ${message}
      </div>
    `;
    chatContainer.appendChild(userMsg);
    
    // Clear input
    input.value = '';
    chatContainer.scrollTop = chatContainer.scrollHeight;
    
    // If this was a new chat, update URL without reload
    if (${isNewChat}) {
      history.replaceState({}, '', '/chat/general-chat');
    }
    
    // Simulate bot response
    setTimeout(() => {
      const botMsg = document.createElement('div');
      botMsg.className = 'flex justify-start mb-4';
      botMsg.innerHTML = `
        <div class="bg-gray-100 p-3 rounded-lg max-w-[75%]">
          Thanks for your message! How can I assist you further?
        </div>
      `;
      chatContainer.appendChild(botMsg);
      chatContainer.scrollTop = chatContainer.scrollHeight;
    }, 800);
  });
});
</script>